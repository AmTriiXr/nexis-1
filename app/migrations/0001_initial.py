# Generated by Django 4.1 on 2023-04-24 13:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default=None, upload_to='media/cases/')),
                ('name', models.CharField(max_length=55)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaseDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_img', models.ImageField(upload_to='media/cases_details/')),
                ('titolo', models.CharField(max_length=500)),
                ('body_uno', models.TextField()),
                ('body_due', models.TextField()),
                ('img_uno', models.ImageField(upload_to='media/cases_details/')),
                ('img_due', models.ImageField(upload_to='media/cases_details/')),
                ('titolo_due', models.CharField(blank=True, max_length=255, null=True)),
                ('body_tre', models.TextField()),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flaticon', models.CharField(default=None, max_length=255, null=True)),
                ('name', models.CharField(max_length=55, verbose_name='nome')),
                ('desc', models.TextField(verbose_name='description')),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_img', models.ImageField(upload_to='media/feature_detail/')),
                ('titolo', models.CharField(max_length=500, verbose_name='titolo')),
                ('body_uno', models.TextField(verbose_name='body1')),
                ('body_due', models.TextField(verbose_name='body2')),
                ('img_uno', models.ImageField(upload_to='media/feature_detail/')),
                ('img_due', models.ImageField(upload_to='media/feature_detail/')),
                ('titolo_due', models.CharField(blank=True, max_length=255, null=True, verbose_name='titolo_due')),
                ('body_tre', models.TextField(verbose_name='body3')),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/process/')),
                ('name', models.CharField(max_length=55, verbose_name='name')),
                ('desc', models.TextField(verbose_name='desc')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='media/products/')),
                ('modello', models.CharField(default=None, max_length=20, null=True, verbose_name='modello')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('price', models.FloatField(verbose_name='price')),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_uno', models.ImageField(upload_to='media/product_details/')),
                ('modello', models.CharField(default=None, max_length=20, null=True)),
                ('image_due', models.ImageField(upload_to='media/product_details/')),
                ('image_tre', models.ImageField(upload_to='media/product_details/')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField(null=True)),
                ('intro', models.TextField()),
                ('desc', models.TextField()),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flaticon', models.CharField(default=None, max_length=255, null=True)),
                ('name', models.CharField(max_length=55, verbose_name='name')),
                ('desc', models.TextField(verbose_name='desc')),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Untitled', max_length=255)),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='media/service_details/')),
                ('content', tinymce.models.HTMLField(default=None)),
                ('slug', models.SlugField(default=None, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic', models.ImageField(upload_to='media/testimonials/')),
                ('name', models.CharField(max_length=255)),
                ('testimonial', models.TextField()),
                ('title', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WhyUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/process/')),
                ('name', models.CharField(max_length=55, verbose_name='name')),
                ('desc', models.TextField(verbose_name='desc')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, default='/assets/images/avatar.png', null=True, upload_to='media/avatars/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('author_image', models.ImageField(blank=True, null=True, upload_to='media/review/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
                ('prodotto', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='app.productdetail')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Review',
                'ordering': ['-timestamp'],
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('ordered', models.BooleanField(default=False)),
                ('product', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default='1', max_digits=8)),
                ('payment_method', models.CharField(choices=[('Bank Transfer', 'bank_transfer'), ('Credit Card', 'credit_card')], default='Credit Card', max_length=50)),
                ('ordered_date', models.DateTimeField(auto_now_add=True)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('ordered', models.BooleanField(default=False)),
                ('items', models.ManyToManyField(to='app.orderitem')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/articles_details/')),
                ('authors', models.ImageField(blank=True, null=True, upload_to='media/author/')),
                ('content', tinymce.models.HTMLField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(default=False)),
                ('slug', models.SlugField(null=True, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(related_name='article_details', to='app.category')),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/articles/')),
                ('authors', models.ImageField(blank=True, null=True, upload_to='media/author/')),
                ('content', tinymce.models.HTMLField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(default=False)),
                ('slug', models.SlugField(null=True, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(related_name='articles', to='app.category')),
                ('likes', models.ManyToManyField(blank=True, related_name='article_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(default='', max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('zip_code', models.CharField(default='', max_length=10)),
                ('country', models.CharField(default='', max_length=50)),
                ('first_name', models.CharField(default='', max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(default='', max_length=500)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'street_address')},
            },
        ),
    ]
